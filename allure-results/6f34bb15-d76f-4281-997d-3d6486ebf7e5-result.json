{"name": "test_search", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@id=\"root\"]/div/div/form/div[2]/div/div/div[1]/input\"}\n  (Session info: chrome=109.0.5414.75)\nStacktrace:\nBacktrace:\n\t(No symbol) [0x00C96643]\n\t(No symbol) [0x00C2BE21]\n\t(No symbol) [0x00B2DA9D]\n\t(No symbol) [0x00B61342]\n\t(No symbol) [0x00B6147B]\n\t(No symbol) [0x00B98DC2]\n\t(No symbol) [0x00B7FDC4]\n\t(No symbol) [0x00B96B09]\n\t(No symbol) [0x00B7FB76]\n\t(No symbol) [0x00B549C1]\n\t(No symbol) [0x00B55E5D]\n\tGetHandleVerifier [0x00F0A142+2497106]\n\tGetHandleVerifier [0x00F385D3+2686691]\n\tGetHandleVerifier [0x00F3BB9C+2700460]\n\tGetHandleVerifier [0x00D43B10+635936]\n\t(No symbol) [0x00C34A1F]\n\t(No symbol) [0x00C3A418]\n\t(No symbol) [0x00C3A505]\n\t(No symbol) [0x00C4508B]\n\tBaseThreadInitThunk [0x76D200F9+25]\n\tRtlGetAppContainerNamedObjectPath [0x76F27BBE+286]\n\tRtlGetAppContainerNamedObjectPath [0x76F27B8E+238]", "trace": "self = <tests.test_yandex_market.TestYandex object at 0x00000291EF2AA950>, driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"08bc2f3bec65c05d39342f64456d12b2\")>\nconfiguration = <configs.config.GlobalConfig object at 0x00000291EF2AB7F0>, clear_bucket = None\n\n    def test_search(self, driver, configuration: GlobalConfig, clear_bucket):\n        pages_ya = PagesYandex(driver, configuration.base_url, configuration.cart_url, configuration.goods_0)\n        pages_ya.open()\n        with allure.step('Login'):\n>           pages_ya.login(configuration.login, configuration.password)\n\ntests\\test_yandex_market.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\pages_yandex.py:25: in login\n    self.driver.find_element(By.XPATH, '//*[@id=\"root\"]/div/div/form/div[2]/div/div/div[1]/input').click()\n..\\pycharmprojectsn\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:1251: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\n..\\pycharmprojectsn\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:430: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000291EF2AAAA0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x76F27BBE+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x76F27B8E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@id=\"root\"]/div/div/form/div[2]/div/div/div[1]/input\"}\nE         (Session info: chrome=109.0.5414.75)\nE       Stacktrace:\nE       Backtrace:\nE       \t(No symbol) [0x00C96643]\nE       \t(No symbol) [0x00C2BE21]\nE       \t(No symbol) [0x00B2DA9D]\nE       \t(No symbol) [0x00B61342]\nE       \t(No symbol) [0x00B6147B]\nE       \t(No symbol) [0x00B98DC2]\nE       \t(No symbol) [0x00B7FDC4]\nE       \t(No symbol) [0x00B96B09]\nE       \t(No symbol) [0x00B7FB76]\nE       \t(No symbol) [0x00B549C1]\nE       \t(No symbol) [0x00B55E5D]\nE       \tGetHandleVerifier [0x00F0A142+2497106]\nE       \tGetHandleVerifier [0x00F385D3+2686691]\nE       \tGetHandleVerifier [0x00F3BB9C+2700460]\nE       \tGetHandleVerifier [0x00D43B10+635936]\nE       \t(No symbol) [0x00C34A1F]\nE       \t(No symbol) [0x00C3A418]\nE       \t(No symbol) [0x00C3A505]\nE       \t(No symbol) [0x00C4508B]\nE       \tBaseThreadInitThunk [0x76D200F9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x76F27BBE+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x76F27B8E+238]\n\n..\\pycharmprojectsn\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:247: NoSuchElementException"}, "steps": [{"name": "Login", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@id=\"root\"]/div/div/form/div[2]/div/div/div[1]/input\"}\n  (Session info: chrome=109.0.5414.75)\nStacktrace:\nBacktrace:\n\t(No symbol) [0x00C96643]\n\t(No symbol) [0x00C2BE21]\n\t(No symbol) [0x00B2DA9D]\n\t(No symbol) [0x00B61342]\n\t(No symbol) [0x00B6147B]\n\t(No symbol) [0x00B98DC2]\n\t(No symbol) [0x00B7FDC4]\n\t(No symbol) [0x00B96B09]\n\t(No symbol) [0x00B7FB76]\n\t(No symbol) [0x00B549C1]\n\t(No symbol) [0x00B55E5D]\n\tGetHandleVerifier [0x00F0A142+2497106]\n\tGetHandleVerifier [0x00F385D3+2686691]\n\tGetHandleVerifier [0x00F3BB9C+2700460]\n\tGetHandleVerifier [0x00D43B10+635936]\n\t(No symbol) [0x00C34A1F]\n\t(No symbol) [0x00C3A418]\n\t(No symbol) [0x00C3A505]\n\t(No symbol) [0x00C4508B]\n\tBaseThreadInitThunk [0x76D200F9+25]\n\tRtlGetAppContainerNamedObjectPath [0x76F27BBE+286]\n\tRtlGetAppContainerNamedObjectPath [0x76F27B8E+238]\n\n", "trace": "  File \"C:\\Users\\andsb\\Eduson\\tests\\test_yandex_market.py\", line 14, in test_search\n    pages_ya.login(configuration.login, configuration.password)\n  File \"C:\\Users\\andsb\\Eduson\\pages\\pages_yandex.py\", line 25, in login\n    self.driver.find_element(By.XPATH, '//*[@id=\"root\"]/div/div/form/div[2]/div/div/div[1]/input').click()\n  File \"c:\\users\\andsb\\pycharmprojectsn\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 1251, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\n  File \"c:\\users\\andsb\\pycharmprojectsn\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 430, in execute\n    self.error_handler.check_response(response)\n  File \"c:\\users\\andsb\\pycharmprojectsn\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 247, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1674667796030, "stop": 1674667806072}], "attachments": [{"name": "log", "source": "66a499b9-ce05-4be0-b3e0-3e1b1385e081-attachment.txt", "type": "text/plain"}], "start": 1674667792479, "stop": 1674667806100, "uuid": "47c56d4c-0ea0-44d8-b30e-0922f9d1fde6", "historyId": "985533983fe55565d3e99cbe86a622a9", "testCaseId": "3150d55e80922a39b2c7040c567a56d8", "fullName": "tests.test_yandex_market.TestYandex#test_search", "labels": [{"name": "feature", "value": "Yandex  tests"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_yandex_market"}, {"name": "subSuite", "value": "TestYandex"}, {"name": "host", "value": "LAPTOP-EVDL38HH"}, {"name": "thread", "value": "17180-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_yandex_market"}]}